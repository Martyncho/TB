
@{
    ViewBag.Title = "MyTrips";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>View1</h2>

@model IEnumerable<TBWeb.Models.Trip>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Destiny)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsFinished)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DurationDays)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Destiny)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsFinished)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DurationDays)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.TripId }) |
                @Html.ActionLink("Details", "Details", new { id=item.TripId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.TripId })
            </td>
        </tr>
    }

    </table>*@




<table class="table">
    <thead>
        <tr data-bind="click: sortTable">
            <th data-column="Category">
                Categoria
                <span data-bind="attr: { class: currentColumn() == 'Category' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="attr: { class: iconType }"></i>
                </span>
            </th>
            <th data-column="Destiny">
                Destino
                <span data-bind="attr: { class: currentColumn() == 'Destiny' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="attr: { class: iconType }"></i>
                </span>
            </th>
            <th data-column="Description">
                Descripcion
                <span data-bind="attr: { class: currentColumn() == 'Description' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="attr: { class: iconType }"></i>
                </span>
            </th>
            <th data-column="PostDate">
                Publicado
                <span data-bind="attr: { class: currentColumn() == 'PostDate' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="    attr: { class: iconType }"></i>
                </span>
            </th>
        </tr>
    </thead>
    <tbody data-bind="foreach: currentPage">
        <tr>
            <td data-bind="text: Category"></td>
            <td data-bind="text: Destiny"></td>
            <td data-bind="text: Description"></td>
            <td data-bind="text: PostDate"></td>
        </tr>
    </tbody>
    <tfoot>
        <tr>
            <td>
                Number of items per page:
                <select id="pageSizeSelector" data-bind="value: pageSize">
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="30">30</option>
                    <option value="40">40</option>
                    <option value="50">50</option>
                    <option value="60">60</option>
                    <option value="70">70</option>
                    <option value="80">80</option>
                    <option value="90">90</option>
                    <option value="100">100</option>
                </select>
            </td>
            <td colspan="6">
                <button data-bind="click: previousPage" class="btn"><i class="icon-step-backward"></i></button>
                Page<label data-bind="text: currentPageIndex() + 1" class="badge"></label>
                <button data-bind="click: nextPage" class="btn"><i class="icon-step-forward"></i></button>
            </td>
        </tr>
    </tfoot>
</table>






@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {

            // Hide the "busy" Gif at load:
            //$("#divProcessing").hide();

            // Attach click handler to the submit button:
            //$('#process').click(function () {
            //    $('#myform').submit();
            //});

            // Handle the form submit event, and make the Ajax request:
            //$("#myform").on("submit", function (event) {
            //    event.preventDefault();

            //    // Show the "busy" Gif:
            //    $("#divProcessing").show();
            //    var url = "Home/Data"; //$(this).attr("action");
            //    alert(url);
            //    var formData = $(this).serialize();
            //    $.ajax({
            //        url: url,
            //        type: "POST",
            //        data: formData,
            //        dataType: "json",
            //        success: function (resp) {
            //            alert('succ');
            //            // Hide the "busy" gif:
            //            $("#divProcessing").hide();
            //            $("#myCarousel").hide();
            //            alert(resp);

            //            var _this = {};

            //            _this.customer = ko.observableArray();
            //            ko.applyBindings(_this, $("#customerlist").get(0));

            //            var results = ko.observableArray();
            //            ko.mapping.fromJS(resp, {}, results);
            //            for (var i = 0; i < results().length; i++) {
            //                _this.customer.push(results()[i]);
            //            };

            //            // Do something useful with the data:
            //            //$("<h3>" + resp.Name + " " + resp.City + "</h3>").appendTo("#grid-list");
            //        }
            //    })
            //});



            //Start();

            //function Start() {

            //    // Show the "busy" Gif:
            //    $("#divProcessing").show();
            //};

            alert("r");
        });

    </script>

    <script type="text/javascript">

        function beginPaging(args) {
            // Animate
            $('#grid-list').fadeOut('normal');
        }

        function successPaging() {
            // Animate
            $('#grid-list').fadeIn('normal');
            $('#myCarousel').fadeOut('normal');
            $('a').tooltip();
        }

        function failurePaging() {
            alert("Could not retrieve list.");
        }

    </script>


    @*<script type="text/javascript">
            function customerViewModel() {
                var _this = {};

                _this.customer = ko.observableArray();
                ko.applyBindings(_this, $("#customer").get(0));

                function LoadcustomerFromServer() {
                    $.post(
                        '/Home/Data',
                        function (data) {
                            alert("here");
                            alert(data);
                            var results = ko.observableArray();
                            ko.mapping.fromJS(data, {}, results);
                            for (var i = 0; i < results().length; i++) {
                                _this.customer.push(results()[i]);
                            };
                        },
                        'json'
                    )
                }

                LoadcustomerFromServer();

                return _this;
            }

            var viewModel = customerViewModel();

        </script>*@

}