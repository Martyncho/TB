@*@model IEnumerable<TBWeb.Models.Customer>*@

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style type="text/css">
    .isVisible {
        display: inline;
    }

    .isHidden {
        display: none;
    }
</style>
<h2>Contacts</h2>
<p>
    @Html.ActionLink("Create New", "Create", new { @class = "btn button" })
</p>



<table class="table">
    <thead>
        <tr data-bind="click: sortTable">
            <th data-column="Destino">
                Destino
                <span data-bind="attr: { class: currentColumn() == 'Destino' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="attr: { class: iconType }"></i>
                </span>
            </th>
            <th data-column="Price">
                Price
                <span data-bind="attr: { class: currentColumn() == 'Price' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="attr: { class: iconType }"></i>
                </span>
            </th>
            <th data-column="Description">
                Descripcion
                <span data-bind="attr: { class: currentColumn() == 'Description' ? 'isVisible' : 'isHidden' }">
                    <i data-bind="    attr: { class: iconType }"></i>
                </span>
            </th>
            @*<th data-column="PhoneNumber">
                    Phone Number
                    <span data-bind="attr: { class: currentColumn() == 'PhoneNumber' ? 'isVisible' : 'isHidden' }">
                        <i data-bind="    attr: { class: iconType }"></i>
                    </span>
                </th>
                <th data-column="City">
                    City
                    <span data-bind="attr: { class: currentColumn() == 'City' ? 'isVisible' : 'isHidden' }">
                        <i data-bind="    attr: { class: iconType }"></i>
                    </span>
                </th>
                <th data-column="State">
                    State
                    <span data-bind="attr: { class: currentColumn() == 'State' ? 'isVisible' : 'isHidden' }">
                        <i data-bind="    attr: { class: iconType }"></i>
                    </span>
                </th>
                <th data-column="Country">
                    Country
                    <span data-bind="attr: { class: currentColumn() == 'Country' ? 'isVisible' : 'isHidden' }">
                        <i data-bind="    attr: { class: iconType }"></i>
                    </span>
                </th>*@
        </tr>
    </thead>
    <tbody data-bind="foreach: currentPage">
        <tr>
            <td data-bind="text: Destino"></td>
            <td data-bind="text: Price"></td>
            <td data-bind="text: Description"></td>
            @*<td data-bind="text: PhoneNumber"></td>
                <td data-bind="text: City"></td>
                <td data-bind="text: State"></td>
                <td data-bind="text: Country"></td>*@
        </tr>
    </tbody>
    <tfoot>
        <tr>
            <td>
                Number of items per page:
                <select id="pageSizeSelector" data-bind="value: pageSize">
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="30">30</option>
                    <option value="40">40</option>
                    <option value="50">50</option>
                    <option value="60">60</option>
                    <option value="70">70</option>
                    <option value="80">80</option>
                    <option value="90">90</option>
                    <option value="100">100</option>
                </select>
            </td>
            <td colspan="6">
                <button data-bind="click: previousPage" class="btn"><i class="icon-step-backward"></i></button>
                Page<label data-bind="text: currentPageIndex() + 1" class="badge"></label>
                <button data-bind="click: nextPage" class="btn"><i class="icon-step-forward"></i></button>
            </td>
        </tr>
    </tfoot>
</table>






@section Scripts
{
<script type="text/javascript">

    $(document).ready(function () {

        // Hide the "busy" Gif at load:
        $("#divProcessing").hide();

        // Attach click handler to the submit button:
        $('#process').click(function () {
            $('#myform').submit();
        });

        // Handle the form submit event, and make the Ajax request:
        $("#myform").on("submit", function (event) {
            event.preventDefault();

            // Show the "busy" Gif:
            $("#divProcessing").show();
            var url = "Home/Data"; //$(this).attr("action");
            alert(url);
            var formData = $(this).serialize();
            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (resp) {
                    alert('succ');
                    // Hide the "busy" gif:
                    $("#divProcessing").hide();
                    $("#myCarousel").hide();
                    alert(resp);

                    var _this = {};

                    _this.customer = ko.observableArray();
                    ko.applyBindings(_this, $("#customerlist").get(0));

                    var results = ko.observableArray();
                    ko.mapping.fromJS(resp, {}, results);
                    for (var i = 0; i < results().length; i++) {
                        _this.customer.push(results()[i]);
                    };

                    // Do something useful with the data:
                    //$("<h3>" + resp.Name + " " + resp.City + "</h3>").appendTo("#grid-list");
                }
            })
        });



        Start();

        function Start() {

            // Show the "busy" Gif:
            $("#divProcessing").show();
        };

    });

</script>

<script type="text/javascript">

    function beginPaging(args) {
        // Animate
        $('#grid-list').fadeOut('normal');
    }

    function successPaging() {
        // Animate
        $('#grid-list').fadeIn('normal');
        $('#myCarousel').fadeOut('normal');
        $('a').tooltip();
    }

    function failurePaging() {
        alert("Could not retrieve list.");
    }

</script>


@*<script type="text/javascript">
        function customerViewModel() {
            var _this = {};

            _this.customer = ko.observableArray();
            ko.applyBindings(_this, $("#customer").get(0));

            function LoadcustomerFromServer() {
                $.post(
                    '/Home/Data',
                    function (data) {
                        alert("here");
                        alert(data);
                        var results = ko.observableArray();
                        ko.mapping.fromJS(data, {}, results);
                        for (var i = 0; i < results().length; i++) {
                            _this.customer.push(results()[i]);
                        };
                    },
                    'json'
                )
            }

            LoadcustomerFromServer();

            return _this;
        }

        var viewModel = customerViewModel();

    </script>*@

}